<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.3.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 这个配置文件是spring整合activiti用的 -->

	<!-- 数据库配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:db.properties" />
	</bean>

	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="1"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="10"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="10"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="2"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="10000"></property>
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!--使用基于注解方式配置事务 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!--要单独创建数据库，因为spring要单独对我们的事务做处理，事务是基于数据库的事务 -->
	<bean id="processEngineConfiguration"
		class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="asyncExecutorActivate" value="false" />
	</bean>

	<!-- 构造流程引擎对象 -->
	<bean id="processEngine"
		class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration"
			ref="processEngineConfiguration" />
	</bean>


	<!-- 创建activiti提供的各种服务接口 -->
	<!-- 工作流仓库服务 -->
	<bean id="repositoryService" factory-bean="processEngine"
		factory-method="getRepositoryService" />
	<!-- 工作流运行时服务 -->
	<bean id="runtimeService" factory-bean="processEngine"
		factory-method="getRuntimeService" />
	<!-- 工作流任务服务 -->
	<bean id="taskService" factory-bean="processEngine"
		factory-method="getTaskService" />
	<!-- 工作流历史数据服务 -->
	<bean id="historyService" factory-bean="processEngine"
		factory-method="getHistoryService" />
	<!-- 工作流管理服务 -->
	<bean id="managementService" factory-bean="processEngine"
		factory-method="getManagementService" />
	<!-- 工作流用户服务 -->
	<bean id="identityService" factory-bean="processEngine"
		factory-method="getIdentityService" />
	<!-- 表单服务 -->
	<bean id="formService" factory-bean="processEngine"
		factory-method="getFormService" />
	<!-- -->
	<bean id="dynamicBpmnService" factory-bean="processEngine"
		factory-method="getDynamicBpmnService" />

	<!-- json解析对象 -->
	<bean id="objectMapper"
		class="com.fasterxml.jackson.databind.ObjectMapper" />

</beans>


